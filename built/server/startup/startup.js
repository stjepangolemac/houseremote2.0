"use strict";
var dotenv = require("dotenv");
dotenv.config();
var server_1 = require("../server/server");
var settings_1 = require("../settings/settings");
var serverOptions_1 = require("../settings/serverOptions");
var loggerOptions_1 = require("../settings/loggerOptions");
var databaseOptions_1 = require("../settings/databaseOptions");
var logger_1 = require("../logger/logger");
var triggerController_1 = require("../triggerController/triggerController");
var triggerService_1 = require("../triggerService/triggerService");
var triggerRepository_1 = require("../triggerRepository/triggerRepository");
var relayController_1 = require("../relayController/relayController");
var relayService_1 = require("../relayService/relayService");
var relayRepository_1 = require("../relayRepository/relayRepository");
var sensorController_1 = require("../sensorController/sensorController");
var sensorService_1 = require("../sensorService/sensorService");
var sensorRepository_1 = require("../sensorRepository/sensorRepository");
var dailyTimerController_1 = require("../dailyTimerController/dailyTimerController");
var dailyTimerService_1 = require("../dailyTimerService/dailyTimerService");
var dailyTimerRepository_1 = require("../dailyTimerRepository/dailyTimerRepository");
var periodicTimerController_1 = require("../periodicTimerController/periodicTimerController");
var periodicTimerService_1 = require("../periodicTimerService/periodicTimerService");
var periodicTimerRepository_1 = require("../periodicTimerRepository/periodicTimerRepository");
var database_1 = require("../database/database");
var serverOptions = new serverOptions_1["default"]();
var loggerOptions = new loggerOptions_1["default"]();
var databaseOptions = new databaseOptions_1["default"]();
var settings = new settings_1["default"](serverOptions, loggerOptions, databaseOptions);
var logger = new logger_1["default"](settings);
var database = new database_1["default"](settings, logger);
var triggerRepository = new triggerRepository_1["default"](logger, database);
var triggerService = new triggerService_1["default"](logger, triggerRepository);
var triggerController = new triggerController_1["default"](logger, "/trigger", triggerService);
var relayRepository = new relayRepository_1["default"](logger, database);
var relayService = new relayService_1["default"](logger, relayRepository);
var relayController = new relayController_1["default"](logger, "/relay", relayService);
var sensorRepository = new sensorRepository_1["default"](logger, database);
var sensorService = new sensorService_1["default"](logger, sensorRepository);
var sensorController = new sensorController_1["default"](logger, "/sensor", sensorService);
var dailyTimerRepository = new dailyTimerRepository_1["default"](logger, database);
var dailyTimerService = new dailyTimerService_1["default"](logger, dailyTimerRepository);
var dailyTimerController = new dailyTimerController_1["default"](logger, "/daily", dailyTimerService);
var periodicTimerRepository = new periodicTimerRepository_1["default"](logger, database);
var periodicTimerService = new periodicTimerService_1["default"](logger, periodicTimerRepository);
var periodicTimerController = new periodicTimerController_1["default"](logger, "/periodic", periodicTimerService);
var server = new server_1["default"](logger, settings, database, [triggerController,
    relayController,
    sensorController,
    dailyTimerController,
    periodicTimerController]);
server.start();

//# sourceMappingURL=data:application/json;base64,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SUFBSSw4QkFBaUIsQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztBQUM1RSxJQUFJLG9CQUFvQixHQUFHLElBQUksaUNBQW9CLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBRXpGLElBQUksdUJBQXVCLEdBQUcsSUFBSSxvQ0FBdUIsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDNUUsSUFBSSxvQkFBb0IsR0FBRyxJQUFJLGlDQUFvQixDQUFDLE1BQU0sRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO0FBQ3JGLElBQUksdUJBQXVCLEdBQUcsSUFBSSxvQ0FBdUIsQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLG9CQUFvQixDQUFDLENBQUM7QUFFckcsSUFBSSxNQUFNLEdBQUcsSUFBSSxtQkFBTSxDQUNyQixNQUFNLEVBQ04sUUFBUSxFQUNSLFFBQVEsRUFDUixDQUFFLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQix1QkFBdUIsQ0FBRSxDQUFDLENBQUM7QUFFL0IsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDIiwiZmlsZSI6InN0YXJ0dXAvc3RhcnR1cC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5kb3RlbnYuY29uZmlnKCk7XG5cbmltcG9ydCBTZXJ2ZXIgZnJvbSBcIi4uL3NlcnZlci9zZXJ2ZXJcIjtcbmltcG9ydCBTZXR0aW5ncyBmcm9tIFwiLi4vc2V0dGluZ3Mvc2V0dGluZ3NcIjtcbmltcG9ydCBTZXJ2ZXJPcHRpb25zIGZyb20gXCIuLi9zZXR0aW5ncy9zZXJ2ZXJPcHRpb25zXCI7XG5pbXBvcnQgTG9nZ2VyT3B0aW9ucyBmcm9tIFwiLi4vc2V0dGluZ3MvbG9nZ2VyT3B0aW9uc1wiO1xuaW1wb3J0IERhdGFiYXNlT3B0aW9ucyBmcm9tIFwiLi4vc2V0dGluZ3MvZGF0YWJhc2VPcHRpb25zXCI7XG5pbXBvcnQgTG9nZ2VyIGZyb20gXCIuLi9sb2dnZXIvbG9nZ2VyXCI7XG5pbXBvcnQgVHJpZ2dlckNvbnRyb2xsZXIgZnJvbSBcIi4uL3RyaWdnZXJDb250cm9sbGVyL3RyaWdnZXJDb250cm9sbGVyXCI7XG5pbXBvcnQgVHJpZ2dlclNlcnZpY2UgZnJvbSBcIi4uL3RyaWdnZXJTZXJ2aWNlL3RyaWdnZXJTZXJ2aWNlXCI7XG5pbXBvcnQgVHJpZ2dlclJlcG9zaXRvcnkgZnJvbSBcIi4uL3RyaWdnZXJSZXBvc2l0b3J5L3RyaWdnZXJSZXBvc2l0b3J5XCI7XG5pbXBvcnQgUmVsYXlDb250cm9sbGVyIGZyb20gXCIuLi9yZWxheUNvbnRyb2xsZXIvcmVsYXlDb250cm9sbGVyXCI7XG5pbXBvcnQgUmVsYXlTZXJ2aWNlIGZyb20gXCIuLi9yZWxheVNlcnZpY2UvcmVsYXlTZXJ2aWNlXCI7XG5pbXBvcnQgUmVsYXlSZXBvc2l0b3J5IGZyb20gXCIuLi9yZWxheVJlcG9zaXRvcnkvcmVsYXlSZXBvc2l0b3J5XCI7XG5pbXBvcnQgU2Vuc29yQ29udHJvbGxlciBmcm9tIFwiLi4vc2Vuc29yQ29udHJvbGxlci9zZW5zb3JDb250cm9sbGVyXCI7XG5pbXBvcnQgU2Vuc29yU2VydmljZSBmcm9tIFwiLi4vc2Vuc29yU2VydmljZS9zZW5zb3JTZXJ2aWNlXCI7XG5pbXBvcnQgU2Vuc29yUmVwb3NpdG9yeSBmcm9tIFwiLi4vc2Vuc29yUmVwb3NpdG9yeS9zZW5zb3JSZXBvc2l0b3J5XCI7XG5pbXBvcnQgRGFpbHlUaW1lckNvbnRyb2xsZXIgZnJvbSBcIi4uL2RhaWx5VGltZXJDb250cm9sbGVyL2RhaWx5VGltZXJDb250cm9sbGVyXCI7XG5pbXBvcnQgRGFpbHlUaW1lclNlcnZpY2UgZnJvbSBcIi4uL2RhaWx5VGltZXJTZXJ2aWNlL2RhaWx5VGltZXJTZXJ2aWNlXCI7XG5pbXBvcnQgRGFpbHlUaW1lclJlcG9zaXRvcnkgZnJvbSBcIi4uL2RhaWx5VGltZXJSZXBvc2l0b3J5L2RhaWx5VGltZXJSZXBvc2l0b3J5XCI7XG5pbXBvcnQgUGVyaW9kaWNUaW1lckNvbnRyb2xsZXIgZnJvbSBcIi4uL3BlcmlvZGljVGltZXJDb250cm9sbGVyL3BlcmlvZGljVGltZXJDb250cm9sbGVyXCI7XG5pbXBvcnQgUGVyaW9kaWNUaW1lclNlcnZpY2UgZnJvbSBcIi4uL3BlcmlvZGljVGltZXJTZXJ2aWNlL3BlcmlvZGljVGltZXJTZXJ2aWNlXCI7XG5pbXBvcnQgUGVyaW9kaWNUaW1lclJlcG9zaXRvcnkgZnJvbSBcIi4uL3BlcmlvZGljVGltZXJSZXBvc2l0b3J5L3BlcmlvZGljVGltZXJSZXBvc2l0b3J5XCI7XG5pbXBvcnQgRGF0YWJhc2UgZnJvbSBcIi4uL2RhdGFiYXNlL2RhdGFiYXNlXCI7XG5cbmxldCBzZXJ2ZXJPcHRpb25zID0gbmV3IFNlcnZlck9wdGlvbnMoKTtcbmxldCBsb2dnZXJPcHRpb25zID0gbmV3IExvZ2dlck9wdGlvbnMoKTtcbmxldCBkYXRhYmFzZU9wdGlvbnMgPSBuZXcgRGF0YWJhc2VPcHRpb25zKCk7XG5sZXQgc2V0dGluZ3MgPSBuZXcgU2V0dGluZ3Moc2VydmVyT3B0aW9ucywgbG9nZ2VyT3B0aW9ucywgZGF0YWJhc2VPcHRpb25zKTtcblxubGV0IGxvZ2dlciA9IG5ldyBMb2dnZXIoc2V0dGluZ3MpO1xuXG5sZXQgZGF0YWJhc2UgPSBuZXcgRGF0YWJhc2Uoc2V0dGluZ3MsIGxvZ2dlcik7XG5cbmxldCB0cmlnZ2VyUmVwb3NpdG9yeSA9IG5ldyBUcmlnZ2VyUmVwb3NpdG9yeShsb2dnZXIsIGRhdGFiYXNlKTtcbmxldCB0cmlnZ2VyU2VydmljZSA9IG5ldyBUcmlnZ2VyU2VydmljZShsb2dnZXIsIHRyaWdnZXJSZXBvc2l0b3J5KTtcbmxldCB0cmlnZ2VyQ29udHJvbGxlciA9IG5ldyBUcmlnZ2VyQ29udHJvbGxlcihsb2dnZXIsIFwiL3RyaWdnZXJcIiwgdHJpZ2dlclNlcnZpY2UpO1xuXG5sZXQgcmVsYXlSZXBvc2l0b3J5ID0gbmV3IFJlbGF5UmVwb3NpdG9yeShsb2dnZXIsIGRhdGFiYXNlKTtcbmxldCByZWxheVNlcnZpY2UgPSBuZXcgUmVsYXlTZXJ2aWNlKGxvZ2dlciwgcmVsYXlSZXBvc2l0b3J5KTtcbmxldCByZWxheUNvbnRyb2xsZXIgPSBuZXcgUmVsYXlDb250cm9sbGVyKGxvZ2dlciwgXCIvcmVsYXlcIiwgcmVsYXlTZXJ2aWNlKTtcblxubGV0IHNlbnNvclJlcG9zaXRvcnkgPSBuZXcgU2Vuc29yUmVwb3NpdG9yeShsb2dnZXIsIGRhdGFiYXNlKTtcbmxldCBzZW5zb3JTZXJ2aWNlID0gbmV3IFNlbnNvclNlcnZpY2UobG9nZ2VyLCBzZW5zb3JSZXBvc2l0b3J5KTtcbmxldCBzZW5zb3JDb250cm9sbGVyID0gbmV3IFNlbnNvckNvbnRyb2xsZXIobG9nZ2VyLCBcIi9zZW5zb3JcIiwgc2Vuc29yU2VydmljZSk7XG5cbmxldCBkYWlseVRpbWVyUmVwb3NpdG9yeSA9IG5ldyBEYWlseVRpbWVyUmVwb3NpdG9yeShsb2dnZXIsIGRhdGFiYXNlKTtcbmxldCBkYWlseVRpbWVyU2VydmljZSA9IG5ldyBEYWlseVRpbWVyU2VydmljZShsb2dnZXIsIGRhaWx5VGltZXJSZXBvc2l0b3J5KTtcbmxldCBkYWlseVRpbWVyQ29udHJvbGxlciA9IG5ldyBEYWlseVRpbWVyQ29udHJvbGxlcihsb2dnZXIsIFwiL2RhaWx5XCIsIGRhaWx5VGltZXJTZXJ2aWNlKTtcblxubGV0IHBlcmlvZGljVGltZXJSZXBvc2l0b3J5ID0gbmV3IFBlcmlvZGljVGltZXJSZXBvc2l0b3J5KGxvZ2dlciwgZGF0YWJhc2UpO1xubGV0IHBlcmlvZGljVGltZXJTZXJ2aWNlID0gbmV3IFBlcmlvZGljVGltZXJTZXJ2aWNlKGxvZ2dlciwgcGVyaW9kaWNUaW1lclJlcG9zaXRvcnkpO1xubGV0IHBlcmlvZGljVGltZXJDb250cm9sbGVyID0gbmV3IFBlcmlvZGljVGltZXJDb250cm9sbGVyKGxvZ2dlciwgXCIvcGVyaW9kaWNcIiwgcGVyaW9kaWNUaW1lclNlcnZpY2UpO1xuXG5sZXQgc2VydmVyID0gbmV3IFNlcnZlcihcbiAgbG9nZ2VyLFxuICBzZXR0aW5ncyxcbiAgZGF0YWJhc2UsXG4gIFsgdHJpZ2dlckNvbnRyb2xsZXIsXG4gICAgcmVsYXlDb250cm9sbGVyLFxuICAgIHNlbnNvckNvbnRyb2xsZXIsXG4gICAgZGFpbHlUaW1lckNvbnRyb2xsZXIsXG4gICAgcGVyaW9kaWNUaW1lckNvbnRyb2xsZXIgXSk7XG5cbnNlcnZlci5zdGFydCgpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
