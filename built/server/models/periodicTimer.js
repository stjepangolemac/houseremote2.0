"use strict";
var mongoose = require("mongoose");
mongoose.Promise = require("es6-promise").Promise;
var PeriodicTimerSchema = new mongoose.Schema({
    enabled: {
        default: true,
        type: Boolean
    },
    forceOn: {
        default: false,
        type: Boolean
    },
    lastOff: {
        max: [60 * 60 * 24 - 1, "lastOff cannot be greater than 86399"],
        min: [0, "lastOff cannot be less than 0"],
        type: Number
    },
    lastOn: {
        max: [60 * 60 * 24 - 1, "lastOn cannot be greater than 86399"],
        min: [0, "lastOn cannot be less than 0"],
        type: Number
    },
    name: {
        maxlenght: [64, "name cannot be longer than 64 characters"],
        minlenght: [2, "name cannot be shorter than 2 characters"],
        type: String
    },
    offTime: {
        max: [60 * 60 * 24 - 1, "offTime cannot be greater than 86399"],
        min: [0, "offTime cannot be less than 0"],
        type: Number
    },
    onTime: {
        max: [60 * 60 * 24 - 1, "onTime cannot be greater than 86399"],
        min: [0, "onTime cannot be less than 0"],
        type: Number
    },
    relay: {
        ref: "Relay",
        type: mongoose.Schema.Types.ObjectId
    }
});
module.exports = mongoose.model("PeriodicTimer", PeriodicTimerSchema);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy9wZXJpb2RpY1RpbWVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFZLFFBQVEsV0FBTSxVQUFVLENBQUMsQ0FBQTtBQUNyQyxRQUFRLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLENBQUM7QUFNbEQsSUFBSSxtQkFBbUIsR0FBRyxJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDNUMsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLElBQUk7UUFDYixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0QsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0QsT0FBTyxFQUFFO1FBQ1AsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLHNDQUFzQyxDQUFDO1FBQy9ELEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSwrQkFBK0IsQ0FBQztRQUN6QyxJQUFJLEVBQUUsTUFBTTtLQUNiO0lBQ0QsTUFBTSxFQUFFO1FBQ04sR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLHFDQUFxQyxDQUFDO1FBQzlELEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSw4QkFBOEIsQ0FBQztRQUN4QyxJQUFJLEVBQUUsTUFBTTtLQUNiO0lBQ0QsSUFBSSxFQUFFO1FBQ0osU0FBUyxFQUFFLENBQUMsRUFBRSxFQUFFLDBDQUEwQyxDQUFDO1FBQzNELFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSwwQ0FBMEMsQ0FBQztRQUMxRCxJQUFJLEVBQUUsTUFBTTtLQUNiO0lBQ0QsT0FBTyxFQUFFO1FBQ1AsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLHNDQUFzQyxDQUFDO1FBQy9ELEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSwrQkFBK0IsQ0FBQztRQUN6QyxJQUFJLEVBQUUsTUFBTTtLQUNiO0lBQ0QsTUFBTSxFQUFFO1FBQ04sR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLHFDQUFxQyxDQUFDO1FBQzlELEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSw4QkFBOEIsQ0FBQztRQUN4QyxJQUFJLEVBQUUsTUFBTTtLQUNiO0lBQ0QsS0FBSyxFQUFFO1FBQ0wsR0FBRyxFQUFFLE9BQU87UUFDWixJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUTtLQUNyQztDQUNGLENBQUMsQ0FBQztBQUVILGlCQUFTLFFBQVEsQ0FBQyxLQUFLLENBQXNCLGVBQWUsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDIiwiZmlsZSI6Im1vZGVscy9wZXJpb2RpY1RpbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XG5tb25nb29zZS5Qcm9taXNlID0gcmVxdWlyZShcImVzNi1wcm9taXNlXCIpLlByb21pc2U7XG5cbmltcG9ydCB7IElQZXJpb2RpY1RpbWVyIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvaW50ZXJmYWNlc1wiO1xuXG5pbnRlcmZhY2UgSVBlcmlvZGljVGltZXJNb2RlbCBleHRlbmRzIElQZXJpb2RpY1RpbWVyLCBtb25nb29zZS5Eb2N1bWVudCB7IH1cblxubGV0IFBlcmlvZGljVGltZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgZW5hYmxlZDoge1xuICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgdHlwZTogQm9vbGVhbixcbiAgfSxcbiAgZm9yY2VPbjoge1xuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgIHR5cGU6IEJvb2xlYW4sXG4gIH0sXG4gIGxhc3RPZmY6IHtcbiAgICBtYXg6IFs2MCAqIDYwICogMjQgLSAxLCBcImxhc3RPZmYgY2Fubm90IGJlIGdyZWF0ZXIgdGhhbiA4NjM5OVwiXSxcbiAgICBtaW46IFswLCBcImxhc3RPZmYgY2Fubm90IGJlIGxlc3MgdGhhbiAwXCJdLFxuICAgIHR5cGU6IE51bWJlcixcbiAgfSxcbiAgbGFzdE9uOiB7XG4gICAgbWF4OiBbNjAgKiA2MCAqIDI0IC0gMSwgXCJsYXN0T24gY2Fubm90IGJlIGdyZWF0ZXIgdGhhbiA4NjM5OVwiXSxcbiAgICBtaW46IFswLCBcImxhc3RPbiBjYW5ub3QgYmUgbGVzcyB0aGFuIDBcIl0sXG4gICAgdHlwZTogTnVtYmVyLFxuICB9LFxuICBuYW1lOiB7XG4gICAgbWF4bGVuZ2h0OiBbNjQsIFwibmFtZSBjYW5ub3QgYmUgbG9uZ2VyIHRoYW4gNjQgY2hhcmFjdGVyc1wiXSxcbiAgICBtaW5sZW5naHQ6IFsyLCBcIm5hbWUgY2Fubm90IGJlIHNob3J0ZXIgdGhhbiAyIGNoYXJhY3RlcnNcIl0sXG4gICAgdHlwZTogU3RyaW5nLFxuICB9LFxuICBvZmZUaW1lOiB7XG4gICAgbWF4OiBbNjAgKiA2MCAqIDI0IC0gMSwgXCJvZmZUaW1lIGNhbm5vdCBiZSBncmVhdGVyIHRoYW4gODYzOTlcIl0sXG4gICAgbWluOiBbMCwgXCJvZmZUaW1lIGNhbm5vdCBiZSBsZXNzIHRoYW4gMFwiXSxcbiAgICB0eXBlOiBOdW1iZXIsXG4gIH0sXG4gIG9uVGltZToge1xuICAgIG1heDogWzYwICogNjAgKiAyNCAtIDEsIFwib25UaW1lIGNhbm5vdCBiZSBncmVhdGVyIHRoYW4gODYzOTlcIl0sXG4gICAgbWluOiBbMCwgXCJvblRpbWUgY2Fubm90IGJlIGxlc3MgdGhhbiAwXCJdLFxuICAgIHR5cGU6IE51bWJlcixcbiAgfSxcbiAgcmVsYXk6IHtcbiAgICByZWY6IFwiUmVsYXlcIixcbiAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXG4gIH0sXG59KTtcblxuZXhwb3J0ID0gbW9uZ29vc2UubW9kZWw8SVBlcmlvZGljVGltZXJNb2RlbD4oXCJQZXJpb2RpY1RpbWVyXCIsIFBlcmlvZGljVGltZXJTY2hlbWEpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
